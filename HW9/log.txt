2012-12-07 21:31:54,326 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.cfg.Configuration - Preparing to build session factory with filters : {}
2012-12-07 21:31:54,326 { yyyy MMM dd HH:mm:ss } INFO  org.hibernate.cfg.Configuration - processing extends queue
2012-12-07 21:31:54,326 { yyyy MMM dd HH:mm:ss } INFO  org.hibernate.cfg.Configuration - processing collection mappings
2012-12-07 21:31:54,327 { yyyy MMM dd HH:mm:ss } INFO  org.hibernate.cfg.Configuration - processing association property references
2012-12-07 21:31:54,327 { yyyy MMM dd HH:mm:ss } INFO  org.hibernate.cfg.Configuration - processing foreign key constraints
2012-12-07 21:31:54,361 { yyyy MMM dd HH:mm:ss } INFO  org.hibernate.connection.DriverManagerConnectionProvider - Using Hibernate built-in connection pool (not for production use!)
2012-12-07 21:31:54,362 { yyyy MMM dd HH:mm:ss } INFO  org.hibernate.connection.DriverManagerConnectionProvider - Hibernate connection pool size: 20
2012-12-07 21:31:54,362 { yyyy MMM dd HH:mm:ss } INFO  org.hibernate.connection.DriverManagerConnectionProvider - autocommit mode: true
2012-12-07 21:31:54,368 { yyyy MMM dd HH:mm:ss } INFO  org.hibernate.connection.DriverManagerConnectionProvider - using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost:3306/webapp
2012-12-07 21:31:54,368 { yyyy MMM dd HH:mm:ss } INFO  org.hibernate.connection.DriverManagerConnectionProvider - connection properties: {autocommit=true}
2012-12-07 21:31:54,369 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.connection.DriverManagerConnectionProvider - total checked-out connections: 0
2012-12-07 21:31:54,369 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.connection.DriverManagerConnectionProvider - opening new JDBC connection
2012-12-07 21:31:54,571 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.connection.DriverManagerConnectionProvider - created connection to: jdbc:mysql://localhost:3306/webapp, Isolation Level: 4
2012-12-07 21:31:54,572 { yyyy MMM dd HH:mm:ss } INFO  org.hibernate.cfg.SettingsFactory - RDBMS: MySQL, version: 5.5.28
2012-12-07 21:31:54,573 { yyyy MMM dd HH:mm:ss } INFO  org.hibernate.cfg.SettingsFactory - JDBC driver: MySQL-AB JDBC Driver, version: mysql-connector-java-5.1.22 ( Revision: ${bzr.revision-id} )
2012-12-07 21:31:54,573 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.connection.DriverManagerConnectionProvider - returning connection to pool, pool size: 1
2012-12-07 21:31:54,585 { yyyy MMM dd HH:mm:ss } INFO  org.hibernate.dialect.Dialect - Using dialect: org.hibernate.dialect.MySQLDialect
2012-12-07 21:31:54,589 { yyyy MMM dd HH:mm:ss } INFO  org.hibernate.transaction.TransactionFactoryFactory - Using default transaction strategy (direct JDBC transactions)
2012-12-07 21:31:54,590 { yyyy MMM dd HH:mm:ss } INFO  org.hibernate.transaction.TransactionManagerLookupFactory - No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
2012-12-07 21:31:54,591 { yyyy MMM dd HH:mm:ss } INFO  org.hibernate.cfg.SettingsFactory - Automatic flush during beforeCompletion(): disabled
2012-12-07 21:31:54,591 { yyyy MMM dd HH:mm:ss } INFO  org.hibernate.cfg.SettingsFactory - Automatic session close at end of transaction: disabled
2012-12-07 21:31:54,591 { yyyy MMM dd HH:mm:ss } INFO  org.hibernate.cfg.SettingsFactory - JDBC batch size: 15
2012-12-07 21:31:54,591 { yyyy MMM dd HH:mm:ss } INFO  org.hibernate.cfg.SettingsFactory - JDBC batch updates for versioned data: disabled
2012-12-07 21:31:54,592 { yyyy MMM dd HH:mm:ss } INFO  org.hibernate.cfg.SettingsFactory - Scrollable result sets: enabled
2012-12-07 21:31:54,592 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.cfg.SettingsFactory - Wrap result sets: disabled
2012-12-07 21:31:54,592 { yyyy MMM dd HH:mm:ss } INFO  org.hibernate.cfg.SettingsFactory - JDBC3 getGeneratedKeys(): enabled
2012-12-07 21:31:54,592 { yyyy MMM dd HH:mm:ss } INFO  org.hibernate.cfg.SettingsFactory - Connection release mode: null
2012-12-07 21:31:54,593 { yyyy MMM dd HH:mm:ss } INFO  org.hibernate.cfg.SettingsFactory - Maximum outer join fetch depth: 2
2012-12-07 21:31:54,593 { yyyy MMM dd HH:mm:ss } INFO  org.hibernate.cfg.SettingsFactory - Default batch fetch size: 1
2012-12-07 21:31:54,593 { yyyy MMM dd HH:mm:ss } INFO  org.hibernate.cfg.SettingsFactory - Generate SQL with comments: disabled
2012-12-07 21:31:54,594 { yyyy MMM dd HH:mm:ss } INFO  org.hibernate.cfg.SettingsFactory - Order SQL updates by primary key: disabled
2012-12-07 21:31:54,594 { yyyy MMM dd HH:mm:ss } INFO  org.hibernate.cfg.SettingsFactory - Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
2012-12-07 21:31:54,595 { yyyy MMM dd HH:mm:ss } INFO  org.hibernate.hql.ast.ASTQueryTranslatorFactory - Using ASTQueryTranslatorFactory
2012-12-07 21:31:54,596 { yyyy MMM dd HH:mm:ss } INFO  org.hibernate.cfg.SettingsFactory - Query language substitutions: {}
2012-12-07 21:31:54,596 { yyyy MMM dd HH:mm:ss } INFO  org.hibernate.cfg.SettingsFactory - Second-level cache: enabled
2012-12-07 21:31:54,596 { yyyy MMM dd HH:mm:ss } INFO  org.hibernate.cfg.SettingsFactory - Query cache: disabled
2012-12-07 21:31:54,596 { yyyy MMM dd HH:mm:ss } INFO  org.hibernate.cfg.SettingsFactory - Cache provider: org.hibernate.cache.NoCacheProvider
2012-12-07 21:31:54,597 { yyyy MMM dd HH:mm:ss } INFO  org.hibernate.cfg.SettingsFactory - Optimize cache for minimal puts: disabled
2012-12-07 21:31:54,598 { yyyy MMM dd HH:mm:ss } INFO  org.hibernate.cfg.SettingsFactory - Structured second-level cache entries: disabled
2012-12-07 21:31:54,598 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.exception.SQLExceptionConverterFactory - Using dialect defined converter
2012-12-07 21:31:54,601 { yyyy MMM dd HH:mm:ss } INFO  org.hibernate.cfg.SettingsFactory - Statistics: disabled
2012-12-07 21:31:54,602 { yyyy MMM dd HH:mm:ss } INFO  org.hibernate.cfg.SettingsFactory - Deleted entity synthetic identifier rollback: disabled
2012-12-07 21:31:54,602 { yyyy MMM dd HH:mm:ss } INFO  org.hibernate.cfg.SettingsFactory - Default entity-mode: pojo
2012-12-07 21:31:54,778 { yyyy MMM dd HH:mm:ss } INFO  org.hibernate.impl.SessionFactoryImpl - building session factory
2012-12-07 21:31:54,779 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.impl.SessionFactoryImpl - Session factory constructed with filter configurations : {}
2012-12-07 21:31:54,779 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.impl.SessionFactoryImpl - instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, hibernate.cache.provider_class=org.hibernate.cache.NoCacheProvider, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk1.7.0_09.jdk/Contents/Home/jre/lib, java.vm.version=23.5-b02, gopherProxySet=false, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=unknown, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/Users/rui/Workspaces/MyEclipse 10/HW9, java.runtime.version=1.7.0_09-b05, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, java.endorsed.dirs=/Library/Java/JavaVirtualMachines/jdk1.7.0_09.jdk/Contents/Home/jre/lib/endorsed, os.arch=x86_64, hibernate.connection.autocommit=true, java.io.tmpdir=/var/folders/mq/v03pg09d2q93jbwk0pgzq8hw0000gn/T/, line.separator=
, java.vm.specification.vendor=Oracle Corporation, cache.provider_class=org.hibernate.cache.NoCacheProvider, hibernate.cache.use_second_level_cache=true, os.name=Mac OS X, sun.jnu.encoding=US-ASCII, java.library.path=/Users/rui/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., hibernate.myeclipse.connection.profile=com.mysql.jdbc.Driver, java.specification.name=Java Platform API Specification, java.class.version=51.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.8.2, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, user.home=/Users/rui, user.timezone=America/New_York, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, file.encoding=MacRoman, java.specification.version=1.7, myeclipse.connection.profile=com.mysql.jdbc.Driver, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.class.path=/Users/rui/Workspaces/MyEclipse 10/HW9/WebRoot/WEB-INF/classes:/Users/rui/Workspaces/MyEclipse 10/HW9/WebRoot/WEB-INF/lib/mysql-connector-java-5.1.22-bin.jar:/Applications/MyEclipse/MyEclipse 10.app/Contents/Profile/configuration/org.eclipse.osgi/bundles/95/1/.cp/myeclipse-data/3.0/lib/antlr-2.7.5H3.jar:/Applications/MyEclipse/MyEclipse 10.app/Contents/Profile/configuration/org.eclipse.osgi/bundles/95/1/.cp/myeclipse-data/3.0/lib/asm.jar:/Applications/MyEclipse/MyEclipse 10.app/Contents/Profile/configuration/org.eclipse.osgi/bundles/95/1/.cp/myeclipse-data/3.0/lib/asm-attrs.jar:/Applications/MyEclipse/MyEclipse 10.app/Contents/Profile/configuration/org.eclipse.osgi/bundles/95/1/.cp/myeclipse-data/3.0/lib/cglib-2.1.jar:/Applications/MyEclipse/MyEclipse 10.app/Contents/Profile/configuration/org.eclipse.osgi/bundles/95/1/.cp/myeclipse-data/3.0/lib/commons-collections-2.1.1.jar:/Applications/MyEclipse/MyEclipse 10.app/Contents/Profile/configuration/org.eclipse.osgi/bundles/95/1/.cp/myeclipse-data/3.0/lib/commons-logging-1.0.4.jar:/Applications/MyEclipse/MyEclipse 10.app/Contents/Profile/configuration/org.eclipse.osgi/bundles/95/1/.cp/myeclipse-data/3.0/lib/dom4j-1.6.jar:/Applications/MyEclipse/MyEclipse 10.app/Contents/Profile/configuration/org.eclipse.osgi/bundles/95/1/.cp/myeclipse-data/3.0/lib/ehcache-1.1.jar:/Applications/MyEclipse/MyEclipse 10.app/Contents/Profile/configuration/org.eclipse.osgi/bundles/95/1/.cp/myeclipse-data/3.0/lib/hibernate3.jar:/Applications/MyEclipse/MyEclipse 10.app/Contents/Profile/configuration/org.eclipse.osgi/bundles/95/1/.cp/myeclipse-data/3.0/lib/jaas.jar:/Applications/MyEclipse/MyEclipse 10.app/Contents/Profile/configuration/org.eclipse.osgi/bundles/95/1/.cp/myeclipse-data/3.0/lib/jaxen-1.1-beta-4.jar:/Applications/MyEclipse/MyEclipse 10.app/Contents/Profile/configuration/org.eclipse.osgi/bundles/95/1/.cp/myeclipse-data/3.0/lib/jdbc2_0-stdext.jar:/Applications/MyEclipse/MyEclipse 10.app/Contents/Profile/configuration/org.eclipse.osgi/bundles/95/1/.cp/myeclipse-data/3.0/lib/jta.jar:/Applications/MyEclipse/MyEclipse 10.app/Contents/Profile/configuration/org.eclipse.osgi/bundles/95/1/.cp/myeclipse-data/3.0/lib/log4j-1.2.9.jar:/Applications/MyEclipse/MyEclipse 10.app/Contents/Profile/configuration/org.eclipse.osgi/bundles/95/1/.cp/myeclipse-data/3.0/lib/xerces-2.6.2.jar:/Applications/MyEclipse/MyEclipse 10.app/Contents/Profile/configuration/org.eclipse.osgi/bundles/95/1/.cp/myeclipse-data/3.0/lib/xml-apis.jar:/Applications/MyEclipse/MyEclipse 10.app/Contents/Profile/configuration/org.eclipse.osgi/bundles/101/1/.cp/data/2.1/core/antlr-2.7.2.jar:/Applications/MyEclipse/MyEclipse 10.app/Contents/Profile/configuration/org.eclipse.osgi/bundles/101/1/.cp/data/2.1/core/aopalliance-1.0.jar:/Applications/MyEclipse/MyEclipse 10.app/Contents/Profile/configuration/org.eclipse.osgi/bundles/101/1/.cp/data/2.1/core/classworlds-1.1.jar:/Applications/MyEclipse/MyEclipse 10.app/Contents/Profile/configuration/org.eclipse.osgi/bundles/101/1/.cp/data/2.1/core/commons-beanutils-1.7.0.jar:/Applications/MyEclipse/MyEclipse 10.app/Contents/Profile/configuration/org.eclipse.osgi/bundles/101/1/.cp/data/2.1/core/commons-chain-1.2.jar:/Applications/MyEclipse/MyEclipse 10.app/Contents/Profile/configuration/org.eclipse.osgi/bundles/101/1/.cp/data/2.1/core/commons-collections-3.2.jar:/Applications/MyEclipse/MyEclipse 10.app/Contents/Profile/configuration/org.eclipse.osgi/bundles/101/1/.cp/data/2.1/core/commons-digester-2.0.jar:/Applications/MyEclipse/MyEclipse 10.app/Contents/Profile/configuration/org.eclipse.osgi/bundles/101/1/.cp/data/2.1/core/commons-fileupload-1.2.1.jar:/Applications/MyEclipse/MyEclipse 10.app/Contents/Profile/configuration/org.eclipse.osgi/bundles/101/1/.cp/data/2.1/core/commons-io-1.3.2.jar:/Applications/MyEclipse/MyEclipse 10.app/Contents/Profile/configuration/org.eclipse.osgi/bundles/101/1/.cp/data/2.1/core/commons-lang-2.3.jar:/Applications/MyEclipse/MyEclipse 10.app/Contents/Profile/configuration/org.eclipse.osgi/bundles/101/1/.cp/data/2.1/core/commons-logging-1.0.4.jar:/Applications/MyEclipse/MyEclipse 10.app/Contents/Profile/configuration/org.eclipse.osgi/bundles/101/1/.cp/data/2.1/core/commons-logging-api-1.1.jar:/Applications/MyEclipse/MyEclipse 10.app/Contents/Profile/configuration/org.eclipse.osgi/bundles/101/1/.cp/data/2.1/core/commons-validator-1.3.1.jar:/Applications/MyEclipse/MyEclipse 10.app/Contents/Profile/configuration/org.eclipse.osgi/bundles/101/1/.cp/data/2.1/core/freemarker-2.3.16.jar:/Applications/MyEclipse/MyEclipse 10.app/Contents/Profile/configuration/org.eclipse.osgi/bundles/101/1/.cp/data/2.1/core/json-lib-2.1-jdk15.jar:/Applications/MyEclipse/MyEclipse 10.app/Contents/Profile/configuration/org.eclipse.osgi/bundles/101/1/.cp/data/2.1/core/ognl-3.0.jar:/Applications/MyEclipse/MyEclipse 10.app/Contents/Profile/configuration/org.eclipse.osgi/bundles/101/1/.cp/data/2.1/core/oro-2.0.8.jar:/Applications/MyEclipse/MyEclipse 10.app/Contents/Profile/configuration/org.eclipse.osgi/bundles/101/1/.cp/data/2.1/core/sslext-1.2-0.jar:/Applications/MyEclipse/MyEclipse 10.app/Contents/Profile/configuration/org.eclipse.osgi/bundles/101/1/.cp/data/2.1/core/struts2-embeddedjsp-plugin-2.2.1.jar:/Applications/MyEclipse/MyEclipse 10.app/Contents/Profile/configuration/org.eclipse.osgi/bundles/101/1/.cp/data/2.1/core/struts2-convention-plugin-2.2.1.jar:/Applications/MyEclipse/MyEclipse 10.app/Contents/Profile/configuration/org.eclipse.osgi/bundles/101/1/.cp/data/2.1/core/struts2-json-plugin-2.2.1.jar:/Applications/MyEclipse/MyEclipse 10.app/Contents/Profile/configuration/org.eclipse.osgi/bundles/101/1/.cp/data/2.1/core/struts2-core-2.2.1.jar:/Applications/MyEclipse/MyEclipse 10.app/Contents/Profile/configuration/org.eclipse.osgi/bundles/101/1/.cp/data/2.1/core/xwork-core-2.2.1.jar:/Applications/MyEclipse/MyEclipse 10.app/Contents/Profile/configuration/org.eclipse.osgi/bundles/101/1/.cp/data/2.1/core/javassist-3.7.ga.jar, user.name=rui, java.vm.specification.version=1.7, sun.java.command=DBOperationTest, java.home=/Library/Java/JavaVirtualMachines/jdk1.7.0_09.jdk/Contents/Home/jre, sun.arch.data.model=64, hibernate.connection.url=jdbc:mysql://localhost:3306/webapp, hibernate.dialect=org.hibernate.dialect.MySQLDialect, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.lwawt.macosx.LWCToolkit, hibernate.cglib.use_reflection_optimizer=true, java.vm.info=mixed mode, java.version=1.7.0_09, java.ext.dirs=/Users/rui/Library/Java/Extensions:/Library/Java/JavaVirtualMachines/jdk1.7.0_09.jdk/Contents/Home/jre/lib/ext:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java, sun.boot.class.path=/Library/Java/JavaVirtualMachines/jdk1.7.0_09.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_09.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_09.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_09.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_09.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_09.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_09.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_09.jdk/Contents/Home/jre/lib/JObjC.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_09.jdk/Contents/Home/jre/classes:/Applications/MyEclipse/Common/plugins/com.genuitec.eclipse.j2eedt.core_10.5.0.me201207171805/data/libraryset/EE_5/javaee.jar:/Applications/MyEclipse/Common/plugins/com.genuitec.eclipse.j2eedt.core_10.5.0.me201207171805/data/libraryset/EE_5/jsf-impl.jar:/Applications/MyEclipse/Common/plugins/com.genuitec.eclipse.j2eedt.core_10.5.0.me201207171805/data/libraryset/EE_5/jsf-api.jar:/Applications/MyEclipse/Common/plugins/com.genuitec.eclipse.j2eedt.core_10.5.0.me201207171805/data/libraryset/EE_5/jstl-1.2.jar, java.vendor=Oracle Corporation, connection.driver_class=com.mysql.jdbc.Driver, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.io.unicode.encoding=UnicodeBig, sun.cpu.endian=little, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, connection.url=jdbc:mysql://localhost:3306/webapp, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, dialect=org.hibernate.dialect.MySQLDialect, sun.cpu.isalist=}
2012-12-07 21:31:54,909 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.persister.entity.BasicEntityPersister - Static SQL for entity: edu.cmu.mse.rui.J2EE.HW8.DataBean.User
2012-12-07 21:31:54,909 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.persister.entity.BasicEntityPersister -  Version select: select UserID from webapp.ruili_user where UserID =?
2012-12-07 21:31:54,910 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.persister.entity.BasicEntityPersister -  Snapshot select: select user_.UserID, user_.EmailAdd as EmailAdd1_, user_.FirstName as FirstName1_, user_.LastName as LastName1_, user_.Password as Password1_ from webapp.ruili_user user_ where user_.UserID=?
2012-12-07 21:31:54,910 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.persister.entity.BasicEntityPersister -  Insert 0: insert into webapp.ruili_user (EmailAdd, FirstName, LastName, Password, UserID) values (?, ?, ?, ?, ?)
2012-12-07 21:31:54,910 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.persister.entity.BasicEntityPersister -  Update 0: update webapp.ruili_user set EmailAdd=?, FirstName=?, LastName=?, Password=? where UserID=?
2012-12-07 21:31:54,910 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.persister.entity.BasicEntityPersister -  Delete 0: delete from webapp.ruili_user where UserID=?
2012-12-07 21:31:54,932 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.persister.entity.BasicEntityPersister - Static SQL for entity: edu.cmu.mse.rui.J2EE.HW8.DataBean.Favorite
2012-12-07 21:31:54,932 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.persister.entity.BasicEntityPersister -  Version select: select FavoriteID from webapp.ruili_favorite where FavoriteID =?
2012-12-07 21:31:54,932 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.persister.entity.BasicEntityPersister -  Snapshot select: select favorite_.FavoriteID, favorite_.UserID as UserID0_, favorite_.URL as URL0_, favorite_.ClickCounter as ClickCou4_0_, favorite_.Comment as Comment0_ from webapp.ruili_favorite favorite_ where favorite_.FavoriteID=?
2012-12-07 21:31:54,932 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.persister.entity.BasicEntityPersister -  Insert 0: insert into webapp.ruili_favorite (UserID, URL, ClickCounter, Comment, FavoriteID) values (?, ?, ?, ?, ?)
2012-12-07 21:31:54,933 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.persister.entity.BasicEntityPersister -  Update 0: update webapp.ruili_favorite set UserID=?, URL=?, ClickCounter=?, Comment=? where FavoriteID=?
2012-12-07 21:31:54,933 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.persister.entity.BasicEntityPersister -  Delete 0: delete from webapp.ruili_favorite where FavoriteID=?
2012-12-07 21:31:54,943 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.loader.entity.EntityLoader - Static select for entity edu.cmu.mse.rui.J2EE.HW8.DataBean.User: select user0_.UserID as UserID0_, user0_.EmailAdd as EmailAdd1_0_, user0_.FirstName as FirstName1_0_, user0_.LastName as LastName1_0_, user0_.Password as Password1_0_ from webapp.ruili_user user0_ where user0_.UserID=?
2012-12-07 21:31:54,943 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.loader.entity.EntityLoader - Static select for entity edu.cmu.mse.rui.J2EE.HW8.DataBean.User: select user0_.UserID as UserID0_, user0_.EmailAdd as EmailAdd1_0_, user0_.FirstName as FirstName1_0_, user0_.LastName as LastName1_0_, user0_.Password as Password1_0_ from webapp.ruili_user user0_ where user0_.UserID=?
2012-12-07 21:31:54,943 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.loader.entity.EntityLoader - Static select for entity edu.cmu.mse.rui.J2EE.HW8.DataBean.User: select user0_.UserID as UserID0_, user0_.EmailAdd as EmailAdd1_0_, user0_.FirstName as FirstName1_0_, user0_.LastName as LastName1_0_, user0_.Password as Password1_0_ from webapp.ruili_user user0_ where user0_.UserID=? for update
2012-12-07 21:31:54,944 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.loader.entity.EntityLoader - Static select for entity edu.cmu.mse.rui.J2EE.HW8.DataBean.User: select user0_.UserID as UserID0_, user0_.EmailAdd as EmailAdd1_0_, user0_.FirstName as FirstName1_0_, user0_.LastName as LastName1_0_, user0_.Password as Password1_0_ from webapp.ruili_user user0_ where user0_.UserID=? for update
2012-12-07 21:31:54,944 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.loader.entity.EntityLoader - Static select for entity edu.cmu.mse.rui.J2EE.HW8.DataBean.Favorite: select favorite0_.FavoriteID as FavoriteID0_, favorite0_.UserID as UserID0_0_, favorite0_.URL as URL0_0_, favorite0_.ClickCounter as ClickCou4_0_0_, favorite0_.Comment as Comment0_0_ from webapp.ruili_favorite favorite0_ where favorite0_.FavoriteID=?
2012-12-07 21:31:54,944 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.loader.entity.EntityLoader - Static select for entity edu.cmu.mse.rui.J2EE.HW8.DataBean.Favorite: select favorite0_.FavoriteID as FavoriteID0_, favorite0_.UserID as UserID0_0_, favorite0_.URL as URL0_0_, favorite0_.ClickCounter as ClickCou4_0_0_, favorite0_.Comment as Comment0_0_ from webapp.ruili_favorite favorite0_ where favorite0_.FavoriteID=?
2012-12-07 21:31:54,945 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.loader.entity.EntityLoader - Static select for entity edu.cmu.mse.rui.J2EE.HW8.DataBean.Favorite: select favorite0_.FavoriteID as FavoriteID0_, favorite0_.UserID as UserID0_0_, favorite0_.URL as URL0_0_, favorite0_.ClickCounter as ClickCou4_0_0_, favorite0_.Comment as Comment0_0_ from webapp.ruili_favorite favorite0_ where favorite0_.FavoriteID=? for update
2012-12-07 21:31:54,945 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.loader.entity.EntityLoader - Static select for entity edu.cmu.mse.rui.J2EE.HW8.DataBean.Favorite: select favorite0_.FavoriteID as FavoriteID0_, favorite0_.UserID as UserID0_0_, favorite0_.URL as URL0_0_, favorite0_.ClickCounter as ClickCou4_0_0_, favorite0_.Comment as Comment0_0_ from webapp.ruili_favorite favorite0_ where favorite0_.FavoriteID=? for update
2012-12-07 21:31:54,947 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.impl.SessionFactoryObjectFactory - initializing class SessionFactoryObjectFactory
2012-12-07 21:31:54,948 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.impl.SessionFactoryObjectFactory - registered: 8a80809d3b785acc013b785acd410000 (unnamed)
2012-12-07 21:31:54,948 { yyyy MMM dd HH:mm:ss } INFO  org.hibernate.impl.SessionFactoryObjectFactory - Not binding factory to JNDI, no JNDI name configured
2012-12-07 21:31:54,948 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.impl.SessionFactoryImpl - instantiated session factory
2012-12-07 21:31:54,948 { yyyy MMM dd HH:mm:ss } INFO  org.hibernate.impl.SessionFactoryImpl - Checking 0 named queries
2012-12-07 21:31:54,964 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.impl.SessionImpl - opened session at timestamp: 13549339149
2012-12-07 21:31:54,965 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.transaction.JDBCTransaction - begin
2012-12-07 21:31:54,965 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.jdbc.ConnectionManager - opening JDBC connection
2012-12-07 21:31:54,966 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.connection.DriverManagerConnectionProvider - total checked-out connections: 0
2012-12-07 21:31:54,966 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.connection.DriverManagerConnectionProvider - using pooled JDBC connection, pool size: 0
2012-12-07 21:31:54,966 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.transaction.JDBCTransaction - current autocommit status: true
2012-12-07 21:31:54,966 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.transaction.JDBCTransaction - disabling autocommit
2012-12-07 21:31:54,968 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.event.def.DefaultSaveOrUpdateEventListener - saving transient instance
2012-12-07 21:31:54,969 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.id.IncrementGenerator - fetching initial value: select max(UserID) from ruili_user
2012-12-07 21:31:54,969 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.SQL - select max(UserID) from ruili_user
2012-12-07 21:31:54,981 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.id.IncrementGenerator - first free id: 3
2012-12-07 21:31:54,981 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.event.def.AbstractSaveEventListener - generated identifier: 3, using strategy: org.hibernate.id.IncrementGenerator
2012-12-07 21:31:54,982 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.event.def.AbstractSaveEventListener - saving [edu.cmu.mse.rui.J2EE.HW8.DataBean.User#3]
2012-12-07 21:31:54,987 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.transaction.JDBCTransaction - commit
2012-12-07 21:31:54,987 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.impl.SessionImpl - automatically flushing session
2012-12-07 21:31:54,988 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.event.def.AbstractFlushingEventListener - flushing session
2012-12-07 21:31:54,988 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.event.def.AbstractFlushingEventListener - processing flush-time cascades
2012-12-07 21:31:54,988 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.event.def.AbstractFlushingEventListener - dirty checking collections
2012-12-07 21:31:54,989 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.event.def.AbstractFlushingEventListener - Flushing entities and processing referenced collections
2012-12-07 21:31:54,989 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.event.def.AbstractFlushingEventListener - Processing unreferenced collections
2012-12-07 21:31:54,990 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.event.def.AbstractFlushingEventListener - Scheduling collection removes/(re)creates/updates
2012-12-07 21:31:54,990 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2012-12-07 21:31:54,990 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2012-12-07 21:31:54,991 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.pretty.Printer - listing entities:
2012-12-07 21:31:54,991 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.pretty.Printer - edu.cmu.mse.rui.J2EE.HW8.DataBean.User{lastName=null, userId=3, firstName=null, password=pasw, emailAdd=ruiliwonder}
2012-12-07 21:31:54,991 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.event.def.AbstractFlushingEventListener - executing flush
2012-12-07 21:31:54,992 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.persister.entity.BasicEntityPersister - Inserting entity: [edu.cmu.mse.rui.J2EE.HW8.DataBean.User#3]
2012-12-07 21:31:54,992 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.jdbc.AbstractBatcher - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2012-12-07 21:31:54,992 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.SQL - insert into webapp.ruili_user (EmailAdd, FirstName, LastName, Password, UserID) values (?, ?, ?, ?, ?)
2012-12-07 21:31:54,992 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.jdbc.AbstractBatcher - preparing statement
2012-12-07 21:31:54,993 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.persister.entity.BasicEntityPersister - Dehydrating entity: [edu.cmu.mse.rui.J2EE.HW8.DataBean.User#3]
2012-12-07 21:31:54,993 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.type.StringType - binding 'ruiliwonder' to parameter: 1
2012-12-07 21:31:54,993 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.type.StringType - binding null to parameter: 2
2012-12-07 21:31:54,994 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.type.StringType - binding null to parameter: 3
2012-12-07 21:31:54,994 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.type.StringType - binding 'pasw' to parameter: 4
2012-12-07 21:31:54,994 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.type.IntegerType - binding '3' to parameter: 5
2012-12-07 21:31:54,994 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.jdbc.AbstractBatcher - Adding to batch
2012-12-07 21:31:54,995 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.jdbc.AbstractBatcher - Executing batch size: 1
2012-12-07 21:31:54,996 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.jdbc.AbstractBatcher - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2012-12-07 21:31:54,996 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.jdbc.AbstractBatcher - closing statement
2012-12-07 21:31:54,997 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.event.def.AbstractFlushingEventListener - post flush
2012-12-07 21:31:54,997 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.jdbc.JDBCContext - before transaction completion
2012-12-07 21:31:54,997 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.impl.SessionImpl - before transaction completion
2012-12-07 21:31:54,999 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.transaction.JDBCTransaction - re-enabling autocommit
2012-12-07 21:31:54,999 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.transaction.JDBCTransaction - committed JDBC Connection
2012-12-07 21:31:54,999 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.jdbc.JDBCContext - after transaction completion
2012-12-07 21:31:54,999 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.impl.SessionImpl - after transaction completion
2012-12-07 21:31:55,000 { yyyy MMM dd HH:mm:ss } DEBUG edu.cmu.mse.rui.J2EE.HW8.DAO.UserDAO - save successful
2012-12-07 21:31:55,000 { yyyy MMM dd HH:mm:ss } DEBUG edu.cmu.mse.rui.J2EE.HW8.DAO.UserDAO - password change
2012-12-07 21:31:55,003 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.transaction.JDBCTransaction - begin
2012-12-07 21:31:55,004 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.transaction.JDBCTransaction - current autocommit status: true
2012-12-07 21:31:55,004 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.transaction.JDBCTransaction - disabling autocommit
2012-12-07 21:31:55,005 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.impl.SessionImpl - executeUpdate: update User set password='hello3' where  userId=1
2012-12-07 21:31:55,005 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.engine.QueryParameters - named parameters: {}
2012-12-07 21:31:55,032 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.hql.ast.QueryTranslatorImpl - parse() - HQL: update User set password='hello3' where  userId=1
2012-12-07 21:31:55,038 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.hql.ast.AST - --- HQL AST ---
 \-[UPDATE] 'update'
    +-[FROM] 'FROM'
    |  \-[RANGE] 'RANGE'
    |     \-[IDENT] 'User'
    +-[SET] 'set'
    |  \-[EQ] '='
    |     +-[IDENT] 'password'
    |     \-[QUOTED_STRING] ''hello3''
    \-[WHERE] 'where'
       \-[EQ] '='
          +-[IDENT] 'userId'
          \-[NUM_INT] '1'

2012-12-07 21:31:55,039 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.hql.ast.ErrorCounter - throwQueryException() : no errors
2012-12-07 21:31:55,063 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.hql.ast.FromElement - FromClause{level=1} :  User (no alias) -> user0_
2012-12-07 21:31:55,064 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.hql.ast.FromReferenceNode - Resolved :  password -> Password
2012-12-07 21:31:55,064 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.hql.ast.FromReferenceNode - Resolved :  userId -> UserID
2012-12-07 21:31:55,067 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.hql.ast.AST - --- SQL AST ---
 \-[UPDATE] QueryNode: 'update'  querySpaces (webapp.ruili_user)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'webapp.ruili_user' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=webapp.ruili_user,tableAlias=user0_,colums={,className=User}}
    +-[SET] SqlNode: 'set'
    |  \-[EQ] SqlNode: '='
    |     +-[SQL_TOKEN] IdentNode: 'Password' {originalText=password}
    |     \-[QUOTED_STRING] LiteralNode: ''hello3''
    \-[WHERE] SqlNode: 'where'
       \-[EQ] SqlNode: '='
          +-[SQL_TOKEN] IdentNode: 'UserID' {originalText=userId}
          \-[NUM_INT] LiteralNode: '1'

2012-12-07 21:31:55,067 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.hql.ast.ErrorCounter - throwQueryException() : no errors
2012-12-07 21:31:55,073 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.hql.ast.QueryTranslatorImpl - HQL: update User set password='hello3' where  userId=1
2012-12-07 21:31:55,073 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.hql.ast.QueryTranslatorImpl - SQL: update webapp.ruili_user set Password='hello3' where UserID=1
2012-12-07 21:31:55,073 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.hql.ast.ErrorCounter - throwQueryException() : no errors
2012-12-07 21:31:55,074 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.event.def.AbstractFlushingEventListener - flushing session
2012-12-07 21:31:55,074 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.event.def.AbstractFlushingEventListener - processing flush-time cascades
2012-12-07 21:31:55,074 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.event.def.AbstractFlushingEventListener - dirty checking collections
2012-12-07 21:31:55,074 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.event.def.AbstractFlushingEventListener - Flushing entities and processing referenced collections
2012-12-07 21:31:55,075 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.event.def.AbstractFlushingEventListener - Processing unreferenced collections
2012-12-07 21:31:55,075 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.event.def.AbstractFlushingEventListener - Scheduling collection removes/(re)creates/updates
2012-12-07 21:31:55,075 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2012-12-07 21:31:55,075 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2012-12-07 21:31:55,075 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.pretty.Printer - listing entities:
2012-12-07 21:31:55,075 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.pretty.Printer - edu.cmu.mse.rui.J2EE.HW8.DataBean.User{lastName=null, userId=3, firstName=null, password=pasw, emailAdd=ruiliwonder}
2012-12-07 21:31:55,075 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.event.def.DefaultAutoFlushEventListener - Dont need to execute flush
2012-12-07 21:31:55,076 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.jdbc.AbstractBatcher - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2012-12-07 21:31:55,076 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.SQL - update webapp.ruili_user set Password='hello3' where UserID=1
2012-12-07 21:31:55,076 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.jdbc.AbstractBatcher - preparing statement
2012-12-07 21:31:55,077 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.jdbc.AbstractBatcher - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2012-12-07 21:31:55,077 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.jdbc.AbstractBatcher - closing statement
2012-12-07 21:31:55,077 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.transaction.JDBCTransaction - commit
2012-12-07 21:31:55,077 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.impl.SessionImpl - automatically flushing session
2012-12-07 21:31:55,077 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.event.def.AbstractFlushingEventListener - flushing session
2012-12-07 21:31:55,077 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.event.def.AbstractFlushingEventListener - processing flush-time cascades
2012-12-07 21:31:55,078 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.event.def.AbstractFlushingEventListener - dirty checking collections
2012-12-07 21:31:55,078 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.event.def.AbstractFlushingEventListener - Flushing entities and processing referenced collections
2012-12-07 21:31:55,078 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.event.def.AbstractFlushingEventListener - Processing unreferenced collections
2012-12-07 21:31:55,078 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.event.def.AbstractFlushingEventListener - Scheduling collection removes/(re)creates/updates
2012-12-07 21:31:55,078 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2012-12-07 21:31:55,078 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2012-12-07 21:31:55,078 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.pretty.Printer - listing entities:
2012-12-07 21:31:55,079 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.pretty.Printer - edu.cmu.mse.rui.J2EE.HW8.DataBean.User{lastName=null, userId=3, firstName=null, password=pasw, emailAdd=ruiliwonder}
2012-12-07 21:31:55,079 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.event.def.AbstractFlushingEventListener - executing flush
2012-12-07 21:31:55,079 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.event.def.AbstractFlushingEventListener - post flush
2012-12-07 21:31:55,079 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.jdbc.JDBCContext - before transaction completion
2012-12-07 21:31:55,079 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.impl.SessionImpl - before transaction completion
2012-12-07 21:31:55,080 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.transaction.JDBCTransaction - re-enabling autocommit
2012-12-07 21:31:55,080 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.transaction.JDBCTransaction - committed JDBC Connection
2012-12-07 21:31:55,080 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.jdbc.JDBCContext - after transaction completion
2012-12-07 21:31:55,080 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.impl.SessionImpl - after transaction completion
2012-12-07 21:31:55,080 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.event.def.AbstractFlushingEventListener - flushing session
2012-12-07 21:31:55,081 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.event.def.AbstractFlushingEventListener - processing flush-time cascades
2012-12-07 21:31:55,081 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.event.def.AbstractFlushingEventListener - dirty checking collections
2012-12-07 21:31:55,081 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.event.def.AbstractFlushingEventListener - Flushing entities and processing referenced collections
2012-12-07 21:31:55,081 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.event.def.AbstractFlushingEventListener - Processing unreferenced collections
2012-12-07 21:31:55,081 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.event.def.AbstractFlushingEventListener - Scheduling collection removes/(re)creates/updates
2012-12-07 21:31:55,081 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2012-12-07 21:31:55,081 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2012-12-07 21:31:55,082 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.pretty.Printer - listing entities:
2012-12-07 21:31:55,082 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.pretty.Printer - edu.cmu.mse.rui.J2EE.HW8.DataBean.User{lastName=null, userId=3, firstName=null, password=pasw, emailAdd=ruiliwonder}
2012-12-07 21:31:55,082 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.event.def.AbstractFlushingEventListener - executing flush
2012-12-07 21:31:55,082 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.event.def.AbstractFlushingEventListener - post flush
2012-12-07 21:31:55,082 { yyyy MMM dd HH:mm:ss } DEBUG edu.cmu.mse.rui.J2EE.HW8.DAO.UserDAO - getting User instance with id: 1
2012-12-07 21:31:55,082 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.impl.SessionImpl - find: from User where userId=1
2012-12-07 21:31:55,082 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.engine.QueryParameters - named parameters: {}
2012-12-07 21:31:55,083 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.hql.ast.QueryTranslatorImpl - parse() - HQL: from edu.cmu.mse.rui.J2EE.HW8.DataBean.User where userId=1
2012-12-07 21:31:55,086 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.hql.ast.AST - --- HQL AST ---
 \-[QUERY] 'query'
    +-[SELECT_FROM] 'SELECT_FROM'
    |  \-[FROM] 'from'
    |     \-[RANGE] 'RANGE'
    |        \-[DOT] '.'
    |           +-[DOT] '.'
    |           |  +-[DOT] '.'
    |           |  |  +-[DOT] '.'
    |           |  |  |  +-[DOT] '.'
    |           |  |  |  |  +-[DOT] '.'
    |           |  |  |  |  |  +-[DOT] '.'
    |           |  |  |  |  |  |  +-[IDENT] 'edu'
    |           |  |  |  |  |  |  \-[IDENT] 'cmu'
    |           |  |  |  |  |  \-[IDENT] 'mse'
    |           |  |  |  |  \-[IDENT] 'rui'
    |           |  |  |  \-[IDENT] 'J2EE'
    |           |  |  \-[IDENT] 'HW8'
    |           |  \-[IDENT] 'DataBean'
    |           \-[IDENT] 'User'
    \-[WHERE] 'where'
       \-[EQ] '='
          +-[IDENT] 'userId'
          \-[NUM_INT] '1'

2012-12-07 21:31:55,086 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.hql.ast.ErrorCounter - throwQueryException() : no errors
2012-12-07 21:31:55,086 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker - query() << begin, level = 1
2012-12-07 21:31:55,088 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.hql.ast.FromElement - FromClause{level=1} :  edu.cmu.mse.rui.J2EE.HW8.DataBean.User (no alias) -> user0_
2012-12-07 21:31:55,089 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.hql.ast.FromReferenceNode - Resolved :  userId -> user0_.UserID
2012-12-07 21:31:55,089 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker - query() : finishing up , level = 1
2012-12-07 21:31:55,089 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.hql.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} webapp.ruili_user user0_ ) ( where ( = user0_.UserID 1 ) ) )
2012-12-07 21:31:55,092 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.hql.ast.HqlSqlWalker - Derived SELECT clause created.
2012-12-07 21:31:55,095 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.hql.ast.JoinProcessor - Using FROM fragment [webapp.ruili_user user0_]
2012-12-07 21:31:55,095 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.hql.antlr.HqlSqlBaseWalker - query() >> end, level = 1
2012-12-07 21:31:55,097 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.hql.ast.AST - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (webapp.ruili_user)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'user0_.UserID as UserID' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=webapp.ruili_user,tableAlias=user0_,colums={,className=edu.cmu.mse.rui.J2EE.HW8.DataBean.User}}}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.EmailAdd as EmailAdd1_, user0_.FirstName as FirstName1_, user0_.LastName as LastName1_, user0_.Password as Password1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'webapp.ruili_user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=webapp.ruili_user,tableAlias=user0_,colums={,className=edu.cmu.mse.rui.J2EE.HW8.DataBean.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] SqlNode: '='
          +-[SQL_TOKEN] IdentNode: 'user0_.UserID' {originalText=userId}
          \-[NUM_INT] LiteralNode: '1'

2012-12-07 21:31:55,097 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.hql.ast.ErrorCounter - throwQueryException() : no errors
2012-12-07 21:31:55,097 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.hql.ast.QueryTranslatorImpl - HQL: from edu.cmu.mse.rui.J2EE.HW8.DataBean.User where userId=1
2012-12-07 21:31:55,097 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.hql.ast.QueryTranslatorImpl - SQL: select user0_.UserID as UserID, user0_.EmailAdd as EmailAdd1_, user0_.FirstName as FirstName1_, user0_.LastName as LastName1_, user0_.Password as Password1_ from webapp.ruili_user user0_ where user0_.UserID=1
2012-12-07 21:31:55,097 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.hql.ast.ErrorCounter - throwQueryException() : no errors
2012-12-07 21:31:55,100 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.event.def.AbstractFlushingEventListener - flushing session
2012-12-07 21:31:55,100 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.event.def.AbstractFlushingEventListener - processing flush-time cascades
2012-12-07 21:31:55,101 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.event.def.AbstractFlushingEventListener - dirty checking collections
2012-12-07 21:31:55,101 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.event.def.AbstractFlushingEventListener - Flushing entities and processing referenced collections
2012-12-07 21:31:55,101 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.event.def.AbstractFlushingEventListener - Processing unreferenced collections
2012-12-07 21:31:55,101 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.event.def.AbstractFlushingEventListener - Scheduling collection removes/(re)creates/updates
2012-12-07 21:31:55,101 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2012-12-07 21:31:55,101 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2012-12-07 21:31:55,102 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.pretty.Printer - listing entities:
2012-12-07 21:31:55,102 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.pretty.Printer - edu.cmu.mse.rui.J2EE.HW8.DataBean.User{lastName=null, userId=3, firstName=null, password=pasw, emailAdd=ruiliwonder}
2012-12-07 21:31:55,102 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.event.def.DefaultAutoFlushEventListener - Dont need to execute flush
2012-12-07 21:31:55,102 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.jdbc.AbstractBatcher - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2012-12-07 21:31:55,103 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.SQL - select user0_.UserID as UserID, user0_.EmailAdd as EmailAdd1_, user0_.FirstName as FirstName1_, user0_.LastName as LastName1_, user0_.Password as Password1_ from webapp.ruili_user user0_ where user0_.UserID=1
2012-12-07 21:31:55,103 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.jdbc.AbstractBatcher - preparing statement
2012-12-07 21:31:55,104 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.jdbc.AbstractBatcher - about to open ResultSet (open ResultSets: 0, globally: 0)
2012-12-07 21:31:55,104 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.loader.Loader - processing result set
2012-12-07 21:31:55,104 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.loader.Loader - result set row: 0
2012-12-07 21:31:55,105 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.type.IntegerType - returning '1' as column: UserID
2012-12-07 21:31:55,105 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.loader.Loader - result row: EntityKey[edu.cmu.mse.rui.J2EE.HW8.DataBean.User#1]
2012-12-07 21:31:55,105 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.loader.Loader - Initializing object from ResultSet: [edu.cmu.mse.rui.J2EE.HW8.DataBean.User#1]
2012-12-07 21:31:55,107 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.persister.entity.BasicEntityPersister - Hydrating entity: [edu.cmu.mse.rui.J2EE.HW8.DataBean.User#1]
2012-12-07 21:31:55,107 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.type.StringType - returning 'ruili@cs.cmu.edu' as column: EmailAdd1_
2012-12-07 21:31:55,107 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.type.StringType - returning 'rui' as column: FirstName1_
2012-12-07 21:31:55,113 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.type.StringType - returning 'li' as column: LastName1_
2012-12-07 21:31:55,113 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.type.StringType - returning 'hello3' as column: Password1_
2012-12-07 21:31:55,114 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.loader.Loader - done processing result set (1 rows)
2012-12-07 21:31:55,114 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.jdbc.AbstractBatcher - about to close ResultSet (open ResultSets: 1, globally: 1)
2012-12-07 21:31:55,114 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.jdbc.AbstractBatcher - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2012-12-07 21:31:55,114 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.jdbc.AbstractBatcher - closing statement
2012-12-07 21:31:55,115 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.loader.Loader - total objects hydrated: 1
2012-12-07 21:31:55,116 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.engine.TwoPhaseLoad - resolving associations for [edu.cmu.mse.rui.J2EE.HW8.DataBean.User#1]
2012-12-07 21:31:55,116 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.engine.TwoPhaseLoad - done materializing entity [edu.cmu.mse.rui.J2EE.HW8.DataBean.User#1]
2012-12-07 21:31:55,116 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.engine.PersistenceContext - initializing non-lazy collections
2012-12-07 21:31:55,117 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.jdbc.JDBCContext - after autocommit
2012-12-07 21:31:55,117 { yyyy MMM dd HH:mm:ss } DEBUG org.hibernate.impl.SessionImpl - after transaction completion
